name: ci

on:
  push:
    branches:
    - main
  pull_request:
    branches: 
    - main

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-blog-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        working-directory: ./my-blog-app
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
        env:
          CI: true

      - name: Build
        run: npm run build
        working-directory: ./my-blog-app

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend-blog
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        working-directory: ./backend-blog
        run: |
          npm i
          npm install --save-dev --save-exact prettier
        env:
          CI: true

      - name: Build
        run: npm run build
        working-directory: ./backend-blog

  
  frontend-security:
    needs: frontend-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-blog-app
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
        with:
          version: latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  

      - name: Snyk Authenticate    
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true
  
  backend-security:
    needs: backend-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend-blog
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
        with:
          version: latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  

      - name: Snyk Authenticate    
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true
  
  backend-image:
    needs: backend-security
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      security-events: write 
      actions: read
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: your-aws-region
    
    - name: Build backend Docker image
      working-directory: ./backend-blog
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username ${{ secrets.ECR_USERNAME }} --password-stdin ${{ secrets.ECR_PASSWORD }}
        docker build -t demo-app-ecr-repo .
        docker tag demo-app-ecr-repo:latest ${{ secrets.ECR_PASSWORD }}/demo-app-ecr-repo:latest  

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.ECR_PASSWORD }}/demo-app-ecr-repo'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH' 
        
    - name: Install Snyk CLI
      uses: snyk/actions/setup@master
      with:
        snyk-token: ${{ secrets.SNYK_TOKEN }}

    - name: Snyk Authenticate    
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Snyk Container monitor
      run: snyk container monitor ${{ secrets.ECR_PASSWORD }}/demo-app-ecr-repo --file=Dockerfile   
      working-directory: ./backend-blog

    - name: Run Snyk to check for vulnerabilities in the Docker image
      uses: snyk/actions/docker@master
      with:
        image: ${{ secrets.ECR_PASSWORD }}/demo-app-ecr-repo
        args: --file=backend/Dockerfile --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true 